C51 COMPILER V9.52.0.0   UART                                                              02/06/2017 09:57:59 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\Output\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\User\uart.c BROWSE INCDIR(..\User;..\Library) DEBUG OBJECTEXTEND PRINT(.
                    -.\Temp\uart.lst) TABS(2) OBJECT(..\Output\uart.obj)

line level    source

   1          /************************************************************************************
   2          Copyright,  LCE STUDIO  
   3          程序名称：iap/stc 15W4KxxSx系列 4串口全开
   4          功能说明: 串口2 115200 其余9600
   5          ************************************************************************************/ 
   6          
   7          #include "iap15w4k58s4.h"
   8          #include "uart.h"
   9          
  10          xdata unsigned char Rec_Buf[Buf_Max]=0;
  11          xdata unsigned char Rec_Buf_2[Buf_Max]=0;
  12          xdata unsigned char Rec_Buf_3[Buf_Max]=0;
  13          xdata unsigned char Rec_Buf_4[Buf_Max]=0;//串口数据缓存
  14          unsigned char i = 0;
  15          unsigned char i_2 = 0;
  16          unsigned char i_3 = 0;
  17          unsigned char i_4 = 0;//绶存指针
  18          
  19          /*----------------------------
  20          串口初始化
  21          ----------------------------*/
  22          
  23          void UartInit(void)//@18.432MHz
  24          {
  25   1        //9600bps,n,8,1
  26   1        PCON &= 0x7F;//波特率不倍速
  27   1        SCON = 0x50; //8位数据,可变波特率
  28   1        AUXR |= 0x40;//定时器1时钟为Fosc,即1T
  29   1        AUXR &= 0xFE;//串口1选择定时器1为波特率发生器
  30   1        TMOD &= 0x0F;//清除定时器1模式位
  31   1        TMOD |= 0x20;//设定定时器1为8位自动重装方式
  32   1        TL1 = 0xC4;  //设定定时初值
  33   1        TH1 = 0xC4;  //设定定时器重装值
  34   1        ET1 = 0;     //禁止定时器1中断
  35   1        TR1 = 1;     //启动定时器1
  36   1        //开串口2:115200
  37   1        S2CON = 0x50;//8位数据,可变波特率
  38   1        AUXR |= 0x04;//定时器2时钟为Fosc,即1T
  39   1        T2L = 0xD8;  //设定定时初值
  40   1        T2H = 0xFF;  //设定定时初值
  41   1        AUXR |= 0x10;//启动定时器2
  42   1        //开串口3:9600
  43   1        S3CON = 0x10; //8位数据,可变波特率
  44   1        S3CON |= 0x40;//8位数据,可变波特率
  45   1        T4T3M |= 0x02;//定时器3为波特率计算器
  46   1        T3L = 0x20;   //设定定时初值
  47   1        T3H = 0xFE;   //设定定时初值
  48   1        T4T3M |= 0x08;//启动定时器3
  49   1        //开串口4:9600
  50   1        S4CON = 0x10; //8位数据,可变波特率
  51   1        S4CON |= 0x40;//8位数据,可变波特率
  52   1        T4T3M |= 0x20;//定时器4为波特率计算器
  53   1        T4L = 0x20;   //设定定时初值
  54   1        T4H = 0xFE;   //设定定时初值
C51 COMPILER V9.52.0.0   UART                                                              02/06/2017 09:57:59 PAGE 2   

  55   1        T4T3M |= 0x80;//启动定时器4
  56   1      }
  57          
  58          
  59          /*----------------------------
  60          通过串口1发送串口数据
  61          ----------------------------*/
  62          void SendData1(unsigned char ch)
  63          {
  64   1          SBUF = ch;//写数据到UART数据寄存器
  65   1          while(TI == 0);
  66   1          TI = 0;
  67   1      }
  68          
  69          /*----------------------------
  70          通过串口1发送字符串
  71          ----------------------------*/
  72          void SendString1(char *s)
  73          {
  74   1          while (*s)//检测字符串结束标志
  75   1          {
  76   2              SendData1(*s++);//发送当前字符
  77   2          }
  78   1      }
  79          /*----------------------------
  80          通过串口2发送串口数据
  81          ----------------------------*/
  82          void SendData2(unsigned char ch)
  83          {
  84   1          S2BUF = ch;                 //写数据到UART数据寄存器
  85   1          while(!(S2CON&S2TI));    
  86   1          S2CON&=~S2TI;
  87   1      }
  88          
  89          /*----------------------------
  90          通过串口2发送字符串
  91          ----------------------------*/
  92          void SendString2(char *s)
  93          {
  94   1          while (*s)                  //检测字符串结束标志
  95   1          {
  96   2              SendData2(*s++);         //发送当前字符
  97   2          }
  98   1      }
  99          /*----------------------------
 100          通过串口3发送串口数据
 101          ----------------------------*/
 102          void SendData3(unsigned char ch)
 103          {
 104   1          S3BUF = ch;                 //写数据到UART数据寄存器
 105   1          while(!(S3CON&S3TI));    
 106   1          S3CON&=~S3TI;
 107   1      }
 108          
 109          /*----------------------------
 110          通过串口3发送字符串
 111          ----------------------------*/
 112          void SendString3(char *s)
 113          {
 114   1          while (*s)                  //检测字符串结束标志
 115   1          {
 116   2              SendData3(*s++);         //发送当前字符
C51 COMPILER V9.52.0.0   UART                                                              02/06/2017 09:57:59 PAGE 3   

 117   2          }
 118   1      }
 119          /*----------------------------
 120          通过串口4发送串口数据
 121          ----------------------------*/
 122          void SendData4(unsigned char ch)
 123          {
 124   1          S4BUF = ch;                 //写数据到UART数据寄存器
 125   1          while(!(S4CON&S4TI));    
 126   1          S4CON&=~S4TI;
 127   1      }
 128          
 129          /*----------------------------
 130          通过串口4发送字符串
 131          ----------------------------*/
 132          void SendString4(char *s)
 133          {
 134   1          while (*s)                  //检测字符串结束标志
 135   1          {
 136   2              SendData4(*s++);         //发送当前字符
 137   2          }
 138   1      }
 139          /*----------------------------
 140          UART1
 141          -----------------------------*/
 142          void Uart1() interrupt 4
 143          {
 144   1        CLOSE
 145   1        if(RI)
 146   1        {
 147   2          RI = 0;//清除RI位
 148   2          Rec_Buf[i] = SBUF;
 149   2          i++;               
 150   2          if(i>Buf_Max)          
 151   2          {
 152   3            i = 0;
 153   3          }
 154   2        }
 155   1        if (TI)
 156   1        {
 157   2          TI = 0;//清除TI位
 158   2        }
 159   1        OPEN
 160   1      }
 161          /*----------------------------
 162          UART2
 163          -----------------------------*/
 164          void Uart2() interrupt 8
 165          {
 166   1        CLOSE
 167   1        if (S2CON & S2RI)
 168   1        {
 169   2          S2CON &= ~S2RI;
 170   2          Rec_Buf_2[i_2] = S2BUF; 
 171   2          i_2++;               
 172   2          if(i_2>Buf_Max)          
 173   2          {
 174   3            i_2 = 0;
 175   3          }
 176   2        }
 177   1        if (S2CON & S2TI)
 178   1        {
C51 COMPILER V9.52.0.0   UART                                                              02/06/2017 09:57:59 PAGE 4   

 179   2          S2CON &= ~S2TI;
 180   2        }
 181   1        OPEN
 182   1      }
 183          /*----------------------------
 184          UART3
 185          -----------------------------*/
 186          void Uart3() interrupt 17
 187          {
 188   1        CLOSE
 189   1        if (S3CON & S3RI)
 190   1        {
 191   2          S3CON &= ~S3RI;
 192   2      Rec_Buf_3[i_3] = S3BUF; 
 193   2          i_3++;               
 194   2          if(i_3>Buf_Max)          
 195   2          {
 196   3            i_3 = 0;
 197   3          }
 198   2        }
 199   1        if (S3CON & S3TI)
 200   1        {
 201   2          S3CON &= ~S3TI;
 202   2        }
 203   1        OPEN
 204   1      }
 205          /*----------------------------
 206          UART4
 207          -----------------------------*/
 208          void Uart4() interrupt 18
 209          {
 210   1        CLOSE
 211   1        if (S4CON & S4RI)
 212   1        {
 213   2          S4CON &= ~S4RI;
 214   2          Rec_Buf_4[i_4] = S4BUF; 
 215   2          i_4++;               
 216   2          if(i_4>Buf_Max)          
 217   2          {
 218   3            i_4 = 0;
 219   3          }
 220   2        }
 221   1        if (S4CON & S4TI)
 222   1        {
 223   2          S4CON &= ~S4TI;
 224   2        }
 225   1        OPEN
 226   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    539    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    120    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
